<div class="inner-list-container"></div>
{{ template "entity_card_compact" . }}

{{ template "copy" }}

<script>
const listItemTemplate = document.getElementById('entity-list-template')

const innerListContainer = document.querySelector('.inner-list-container')

function setTitle(ctx, name) {
  const title = ctx.querySelector('.entity-card-title')
  if (!title) return
  title.querySelector('.entity-card-name').textContent = name
  return title
}

function setAltTitle(ctx, text) {
  const altTitle = ctx.querySelector('.entity-card-title-alt')
  if (!altTitle) return
  altTitle.querySelector('.entity-card-name').textContent = text
  return altTitle
}

function addSubcategory(elem, text) {
  if (!text) {
    elem.querySelector('.entity-card-subcategory').classList.add('hidden')
    return
  }
  elem.querySelector('.entity-card-subcategory').textContent = `(${text})`
  return elem
}

function addListItem(item) {
  // clone the list item template
  const listItem = listItemTemplate.cloneNode(true)
    listItem.classList.remove('hidden')

  // set the text content of the list item to the entity's name
  const img = listItem.querySelector('img')
  img.src = item.thumbnail
  img.alt = `${item.name} thumbnail`

  const title = setTitle(listItem, item.name)
  if (title) addSubcategory(title, item.subcategory)

  const altTitle = setAltTitle(listItem, item.altName)
  if (altTitle) addSubcategory(altTitle, item.subcategory)

  listItem.querySelector('.entity-card-tile-count').textContent = `${item.tileCount} tile marker${item.tileCount > 1 ? 's' : ''}`

  Array.from(listItem.querySelectorAll('.entity-link')).forEach(e => e.href = item.link)

  const button = listItem.querySelector('.copy-button')

  button.setAttribute('hx-get', `./api/button_${item.apiUri}.html`)

  // add to the inner-list-container
  innerListContainer.appendChild(listItem)

  htmx.process(listItem)
}

function updateList(items) {
  // clear the inner-list-container
  innerListContainer.innerHTML = ''

  const listItems = items.forEach(item=> {
    addListItem(item)
  })
}
</script>
