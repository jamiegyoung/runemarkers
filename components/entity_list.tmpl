<div class="inner-list-container"></div>
{{ template "entity_card" }}

<script>
const listItemTemplate = document.getElementById('entity-list-template')

const innerListContainer = document.querySelector('.inner-list-container')

document.body,addEventListener('htmx:load', (event) => {
  if (event.target.matches('.entity-card-copy')) {
    const button = event.target
    // simulate button click
    button.click()
  }
})
function copy(e) {
  const text = e.getAttribute('data-tiles')
  const textArea = document.createElement('textarea')
  textArea.value = text
  document.body.appendChild(textArea)
  textArea.select()
  document.execCommand('copy')
  document.body.removeChild(textArea)
}

function addListItem(item) {
  // clone the list item template
  const listItem = listItemTemplate.cloneNode(true)
    listItem.classList.remove('hidden')

  // set the text content of the list item to the entity's name
  const img = listItem.querySelector('img')
  img.src = item.thumbnail
  img.alt = `${item.name} thumbnail`


  const title = listItem.querySelector('.entity-card-title')
  const altTitle = listItem.querySelector('.entity-card-title-alt')

  function addSubcategory(elem) {
    if (!item.subcategory) {
      elem.querySelector('.entity-card-subcategory').classList.add('hidden')
      return
    }
    elem.querySelector('.entity-card-subcategory').textContent = `(${item.subcategory})`
  }

  title.querySelector('.entity-card-name').textContent = item.name
  addSubcategory(title)

  altTitle.querySelector('.entity-card-name').textContent = item.altName
  addSubcategory(altTitle)

  listItem.querySelector('.entity-card-tile-count').textContent = item.tileCount

  const button = listItem.querySelector('.entity-card-copy')

  button.setAttribute('hx-get', `./api/button_${item.safeUri}.html`)

  // add to the inner-list-container
  innerListContainer.appendChild(listItem)

  htmx.process(listItem)
}

function updateList(items) {
  // clear the inner-list-container
  innerListContainer.innerHTML = ''

  const listItems = items.forEach(item=> {
    addListItem(item)
  })
}
</script>
